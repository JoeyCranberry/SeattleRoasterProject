@if (Bean != null)
{
    <div class="bean-body-@_countryIso2AlphaCode z-[1] relative flex h-full flex-col justify-between py-2">
        <BeanDetailProperties Bean="@Bean"></BeanDetailProperties>

        <BeanDetailCountry Bean="@Bean"></BeanDetailCountry>

        @if (Bean.IsSupportingCause)
        {
            <span class="px-0">
                <b>Supports:</b> @Bean.SupportedCause
            </span>
        }

        <BeanDetailTastingNotes Bean="@Bean"></BeanDetailTastingNotes>
    </div>
}

@if (!string.IsNullOrEmpty(_backgroundImagePath))
{
    <style>
        .bean-body-@_countryIso2AlphaCode::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            opacity: 0.1;
            z-index: -1;
            background-image: url(@_backgroundImagePath);
            background-repeat: no-repeat;
            background-size: contain;
            background-position-x: center;
            /* https://codepen.io/sosuke/pen/Pjoqqp */
            filter: invert(36%) sepia(100%) saturate(390%) hue-rotate(343deg) brightness(95%) contrast(93%);
        }
    </style>
}

@code {
    [Parameter] public BeanModel? Bean { get; set; }

    private string _backgroundImagePath = string.Empty;
    private string _countryIso2AlphaCode = string.Empty;

    protected override void OnParametersSet()
    {
        var firstOrigin = Bean?.Origins?.FirstOrDefault();

        if (firstOrigin == null)
        {
            return;
        }

        _countryIso2AlphaCode = SourceLocation.GetIso2AlphaCode(firstOrigin.Country);

        _backgroundImagePath = $"/images/countries/{_countryIso2AlphaCode}.svg";
    }

}