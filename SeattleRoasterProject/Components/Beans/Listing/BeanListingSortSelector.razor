<div >
    <button id="sortButton" @onclick="HandleSortClicked" class="text-crema border-2 border-crema-100 ms-2 rounded border-opacity-30 p-1" type="button" style="line-height: 16px;">
        <span class="bi bi-arrow-down-up p-1"></span>
    </button>
    <ul class="bg-dark-roast-800 border-2 border-dark-roast-600 z-10 absolute ms-2 mt-1 w-36 rounded-md border @(_isExpanded ? "" : "hidden") py-2 py-1">
        @foreach (var option in _sortMethodOptions)
        {
            <li class="w-full cursor-pointer px-4 hover:bg-dark-roast-600">
                <button class="@option.SelectedClass" @onclick="@(e => ChangeSelectedSort(option))">@option.Label</button>
            </li>
        }
    </ul>
</div>

@code {
    [Parameter] public EventCallback<SortMethod> OnSortChanged { get; set; }

    private bool _isExpanded = false;

    private SortMethod selectedOption = new();

    private List<SortMethodOptions> _sortMethodOptions = SortMethodOptions.GetSortMethods();

    private void HandleSortClicked()
    {
        _isExpanded = !_isExpanded;
    }

    private void ChangeSelectedSort(SortMethodOptions selOption)
    {
        selectedOption = selOption.Method;
        SetAllOptionsToInactive();
        selOption.SelectedClass = "selectedOption";

        OnSortChanged.InvokeAsync(selOption.Method);
    }

    private void SetAllOptionsToInactive()
    {
        foreach (var option in _sortMethodOptions)
        {
            option.SelectedClass = "";
        }
    }

}