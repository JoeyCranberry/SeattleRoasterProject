@page "/beans/{quizQueryString?}"

@inject SearchBeanEncoderService searchServ
@inject EnviromentSettings envSettings
@inject IConfiguration config

<BeanFilterDisplay OnBeanFilterSearch="HandleFilterSearch" OnSortChanged="HandleSortChanged"></BeanFilterDisplay>
<BeanLisiting @ref="listing" CurEnviroment="curEnviroment"></BeanLisiting>

@code {
	private BeanLisiting? listing;

	[Parameter]
	public string? quizQueryString { get; set; }

	private EnviromentSettings.Enviroment curEnviroment = EnviromentSettings.Enviroment.PRODUCTION;

	protected override void OnInitialized()
	{
		curEnviroment = envSettings.GetEnviroment(config);
	}

	protected override async Task OnParametersSetAsync()
	{
		if(!String.IsNullOrEmpty(quizQueryString) && listing != null)
		{
			await listing.ApplyFilter(searchServ.DecodeQuizResult(quizQueryString));
		}
	}

	private async Task HandleFilterSearch(BeanFilter filter)
	{
		if (listing != null)
		{
			await listing.ApplyFilter(filter);
		}
	}

	private void HandleSortChanged(SortMethod method)
	{
		if (listing != null)
		{
			listing.SetActiveSort(method);
		}
	}
}
