@inject RoasterService RoasterServ
@inject BeanService BeanServ

<div tabindex="-1" aria-hidden="true" class="fixed top-0 right-0 left-0 z-50 h-[calc(100%-1rem)] max-h-full w-full items-center justify-center overflow-x-hidden overflow-y-auto md:inset-0 @(_isVisible ? "" : "hidden")">
    <div class="relative max-h-full w-full max-w-[80%] p-4">
        <!-- Modal content -->
        <div class="relative rounded-lg bg-neutral-900 text-neutral-100 shadow-sm">
            <!-- Modal header -->
            <div class="flex items-center justify-between rounded-t border-b border-gray-200 bg-purple-800 px-4 py-2 text-purple-100 md:p-5">
                <h3 class="text-xl font-semibold text-purple-100">
                    Edit @_bean.FullName
                </h3>
            </div>

            <div class="space-y-4 p-5">
                <EditForm Model="@_bean">
                    <div class="grid grid-cols-4 gap-x-4">
                        <div class="edit-form-field">
                            <label for="inBeanId">ID</label>
                            <InputText id="inBeanId" @bind-Value="_bean.Id" placeholder="0" disabled />
                        </div>
                        <div class="edit-form-field col-span-3">
                            <label for="inName">Name</label>
                            <InputText id="inName" @bind-Value="_bean.FullName" />
                        </div>
                    </div>

                    <div class="mt-4 grid grid-cols-2">
                        <div class="edit-form-field">
                            <label for="inRoasterMongoId">Roaster</label>
                            <InputSelect id="inRoasterMongoId" @bind-Value="_bean.MongoRoasterId">
                                @foreach (var roaster in _allRoasters.OrderBy(roaster => roaster.Name))
                                {
                                    <option value="@roaster.Id">@roaster.Name</option>
                                }
                            </InputSelect>
                        </div>

                        <div class="edit-form-field col-span-3">
                            <label for="inProductUrl">Name</label>
                            <InputText id="inProductUrl" @bind-Value="_bean.ProductURL" />
                        </div>
                    </div>

                    <div class="mt-4 grid grid-cols-3">
                        <div>
                            <img src="@_bean.ImageURL"
                                 class="@_bean.ImageClass h-36 w-full object-cover md:h-full md:w-36"
                                 alt="@_bean.FullName"
                                 onerror="this.onerror=null;this.src='/images/missing-image.png'"
                                 loading="lazy" />
                        </div>
                        <div class="col-span-2 flex flex-col">
                            <div class="edit-form-field w-full">
                                <label for="inImageURL">Image URL</label>
                                <InputText id="inImageURL" @bind-Value="_bean.ImageURL" placeholder="https://www.roastersite.com/image.png" />
                            </div>
                            <div class="edit-form-field w-full">
                                <label for="inImageClass">Image Class</label>
                                <InputText id="inImageClass" @bind-Value="_bean.ImageClass" />
                            </div>
                        </div>
                    </div>

                    <div class="mt-4 grid grid-cols-3 gap-x-4">
                        <div class="edit-form-field">
                            <label for="inProcessingMethods">Process</label>
                            <div class="flex gap-x-2">
                                <InputSelect id="inProcessingMethods" @bind-Value="_newMethod">
                                    @foreach (var process in _processingMethods)
                                    {
                                        <option value="@process">@BeanModel.GetProcessDisplayName(process)</option>
                                    }
                                </InputSelect>

                                <div class="flex items-center">
                                    <button @onclick="HandleAddProcessingMethodClicked" class="flex flex-0 items-center justify-center rounded border border-green-700 bg-green-700/50 px-2 py-1 text-green-50 hover:bg-green-700">
                                        <span class="bi bi-plus pe-2"></span>
                                        Add
                                    </button>
                                </div>
                            </div>

                            @if (_bean.ProcessingMethods != null)
                            {
                                <table class="mt-2 w-full table-fixed text-sm">
                                    @foreach (var process in _bean.ProcessingMethods)
                                    {
                                        <tr class="border-b border-neutral-700 odd:bg-neutral-800 even:bg-neutral-700">
                                            <td class="px-2">
                                                @BeanModel.GetProcessDisplayName(process)
                                            </td>
                                            <td class="w-8">
                                                <button @onclick="() => HandleRemoveProcessingMethodClicked(process)" class="rounded border border-red-700 bg-red-700/50 px-2 py-1 text-red-50 hover:bg-red-700">
                                                    <span class="bi bi-dash"></span>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </table>
                            }
                        </div>

                        <div class="edit-form-field">
                            <label for="inOrganicCertification">Organic Certification</label>
                            <InputSelect id="inOrganicCertification" @bind-Value="_bean.OrganicCerification">
                                @foreach (var organicCertification in EnumHelper.GetEnumList<OrganicCertification>())
                                {
                                    <option value="@organicCertification">@BeanModel.GetOrganicCertificationDisplayName(organicCertification)</option>
                                }
                            </InputSelect>
                        </div>

                        <div class="edit-form-field">
                            <label for="inRoastLevel">Roast</label>
                            <InputSelect id="inRoastLevel" @bind-Value="_bean.RoastLevel">
                                @foreach (var roastLevel in EnumHelper.GetEnumList<RoastLevel>())
                                {
                                    <option value="@roastLevel">@BeanModel.GetRoastDisplayName(roastLevel)</option>
                                }
                            </InputSelect>
                        </div>
                    </div>

                    <div class="mt-4 grid grid-cols-2 gap-x-4">
                        <div class="grid grid-cols-2 gap-x-4">
                            <div class="edit-form-field">
                                <label for="inPrice">Price</label>
                                <InputNumber id="inPrice" @bind-Value="_bean.PriceBeforeShipping" placeholder="0.00" />
                            </div>

                            <div class="edit-form-field">
                                <label for="inSize">Size (Oz)</label>
                                <InputNumber id="inSize" @bind-Value="_bean.SizeOunces" placeholder="0.00" />
                            </div>

                            <div class="edit-form-field">
                                <InputCheckbox id="inSupportingCause" @bind-Value="_bean.IsSupportingCause" />
                                <span for="inSupportingCause">Supports Cause</span>
                            </div>
                            
                            <div></div>

                            <div class="edit-form-field">
                                <label for="inSupportedCause">Supported Cause</label>
                                <InputText id="inSupportedCause" @bind-Value="_bean.SupportedCause" />
                            </div>
                        </div>
                        <div class="grid grid-cols-1 gap-y-4">
                            <div class="edit-form-field">
                                <InputCheckbox id="inDecaf" @bind-Value="_bean.IsDecaf" />
                                <span for="inDecaf">Decaf</span>
                            </div>

                            <div class="edit-form-field">
                                <InputCheckbox id="inAvailablePreground" @bind-Value="_bean.AvailablePreground" />
                                <span for="inAvailablePreground">Pre-ground Available</span>
                            </div>

                            <div class="edit-form-field">
                                <InputCheckbox id="inFairTrade" @bind-Value="_bean.IsFairTradeCertified" />
                                <span for="inFairTrade">Fair Trade</span>
                            </div>
                            <div class="edit-form-field">
                                <InputCheckbox id="inAboveFairTrade" @bind-Value="_bean.IsAboveFairTradePricing" />
                                <span for="inAboveFairTrade">Above Fair Trade</span>
                            </div>
                            <div class="edit-form-field">
                                <InputCheckbox id="inDirectTrade" @bind-Value="_bean.IsDirectTradeCertified" />
                                <span for="inDirectTrade">Direct Trade</span>
                            </div>
                            <div class="edit-form-field">
                                <InputCheckbox id="inWomanOwnedFarms" @bind-Value="_bean.IsFromWomanOwnedFarms" />
                                <span for="inWomanOwnedFarms">Woman Owned</span>
                            </div>
                            <div class="edit-form-field">
                                <InputCheckbox id="inRainForestCertified" @bind-Value="_bean.IsRainforestAllianceCertified" />
                                <span for="inRainForestCertified">Rainforest Alliance</span>
                            </div>
                        </div>
                    </div>

                    <div class="mt-4 grid grid-cols-5 gap-x-4">
                    </div>
                </EditForm>
            </div>

            <!-- Modal footer -->
            <div class="flex justify-between rounded-b border-t border-gray-200 p-4 text-sm md:p-5 dark:border-gray-600">
                <button class="rounded border border-red-700 bg-red-700/50 px-2 py-1 text-red-50 hover:bg-red-700">
                    <span class="bi bi-trash pe-2"></span>
                    Delete
                </button>
                <div class="flex gap-x-4">
                    <button class="rounded border border-neutral-700 bg-neutral-700/50 px-2 py-1 text-neutral-50 hover:bg-neutral-700" @onclick="HandleCancel">
                        <span class="bi bi-ban pe-2"></span>
                        Cancel
                    </button>
                    <button class="rounded border border-purple-700 bg-purple-700/50 px-2 py-1 text-purple-50 hover:bg-purple-700">
                        <span class="bi bi-floppy pe-2"></span>
                        Save
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<ModalOverlay IsVisible="@_isVisible" />

@code {
    private BeanModel _bean = new();

    private bool _isLoading;
    private bool _isVisible;

    private string _beanId = string.Empty;

    private List<RoasterModel> _allRoasters = new();

    private ProcessingMethod _newMethod;
    private List<ProcessingMethod> _processingMethods = new();

    public async Task LoadModal(string beanId)
    {
        _beanId = beanId;
        _isVisible = true;

        await LoadData();
    }

    private async Task LoadData()
    {
        _isLoading = true;

        _bean = await BeanServ.GetBeanById(_beanId) ?? new();
        _allRoasters = await RoasterServ.GetAllRoasters();
        SetDropdownValues();

        _isLoading = false;

        StateHasChanged();
    }

    private void SetDropdownValues()
    {
        SetProcessingMethodsDropdown();
    }

    private void SetProcessingMethodsDropdown()
    {
        _processingMethods = EnumHelper.GetEnumList<ProcessingMethod>();
        if (_bean.ProcessingMethods != null)
        {
            _processingMethods.RemoveAll(process => _bean.ProcessingMethods.Contains(process));
        }

        if (_processingMethods.Any())
        {
            _newMethod = _processingMethods[0];
        }
    }

    private void HandleCancel()
    {
        _isVisible = false;

        StateHasChanged();
    }

    private void HandleAddProcessingMethodClicked()
    {
        _bean.ProcessingMethods ??= new();

        _bean.ProcessingMethods.Add(_newMethod);
        SetProcessingMethodsDropdown();
    }

    private void HandleRemoveProcessingMethodClicked(ProcessingMethod processToRemove)
    {
        _bean.ProcessingMethods?.RemoveAll(process => process == processToRemove);
        SetProcessingMethodsDropdown();
    }
}
