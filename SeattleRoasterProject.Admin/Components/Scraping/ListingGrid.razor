
<SharedGrid>
    <GridHeader>
        <GridHeaderColumn Width="w-6" />
        <GridHeaderColumn Width="w-8">Image</GridHeaderColumn>
        <GridHeaderColumn>Name</GridHeaderColumn>
        <GridHeaderColumn Width="w-12">Date Added</GridHeaderColumn>
        <GridHeaderColumn Width="w-12">Processes</GridHeaderColumn>
        <GridHeaderColumn Width="w-8">Roast Level</GridHeaderColumn>
        <GridHeaderColumn Width="w-12">Origin</GridHeaderColumn>
    </GridHeader>
    <GridContent>
        @foreach (var bean in Listings)
        {
            <tr class="odd:bg-neutral-800 even:bg-neutral-700 even:hover:bg-purple-200/10 odd:hover:bg-purple-100/20 @(bean.IsExcluded ? "opacity-50" : "")">
                <GridCell>
                    <SharedButton @onclick="() => HandleBeanSelected(bean)" ThemeColor="ButtonThemeEnum.PrimaryOutlined">
                        <i class="bi bi-pencil" />
                    </SharedButton>
                </GridCell>
                <GridCell Class="overflow-hidden text-ellipsis">
                    <img src="@bean.ImageURL"
                         class="@bean.ImageClass h-12 w-full object-cover"
                         alt="@bean.FullName"
                         onerror="this.onerror=null;this.src='/images/missing-image.png'"
                         loading="lazy" />
                </GridCell>
                <GridCell>
                    @bean.FullName
                </GridCell>
                <GridCell>
                    @bean.DateAdded.ToString("dd MMM yyyy")
                </GridCell>
                <GridCell>
                    @EnumHelper.ToCommaDelimitedList(bean.ProcessingMethods)
                </GridCell>
                <GridCell>
                    @bean.RoastLevel
                </GridCell>
                <GridCell>
                    @if (bean.Origins != null)
                    {
                        <ul>
                            @foreach (var origin in bean.Origins)
                            {
                                <li>@origin.GetOriginFullAddress()</li>
                            }
                        </ul>
                    }
                </GridCell>
            </tr>
        }
    </GridContent>
</SharedGrid>

@code {
    [Parameter] 
    public List<BeanModel> Listings { get; set; } = new();

    [Parameter]
    public BeanListingDifferenceTypeEnum ListingType { get; set; }

    [Parameter]
    public EventCallback<BeanModel> OnBeanSelected { get; set; }

    private async Task HandleBeanSelected(BeanModel bean)
    {
        await OnBeanSelected.InvokeAsync(bean);
    }
}
